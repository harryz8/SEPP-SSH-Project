plugins {
  id 'java'
  id 'application'
  id 'org.javamodularity.moduleplugin' version '1.8.12'
  id 'org.openjfx.javafxplugin' version '0.1.0'
  id 'org.beryx.jlink' version '2.25.0'
  id("com.avast.gradle.docker-compose") version "0.17.11"
}

group 'com.SSHGroup'
version '1.0'

repositories {
  mavenCentral()
}

ext {
  junitVersion = '5.10.2'
}

sourceCompatibility = '17'
targetCompatibility = '17'

tasks.withType(JavaCompile) {
  options.encoding = 'UTF-8'
}

apply plugin: 'docker-compose'

dockerCompose.isRequiredBy(run)
dockerCompose.isRequiredBy(test)

run{
  standardInput = System.in
}
=======
>>>>>>> 41a8016 (added docker to gradle)

apply plugin: 'docker-compose'

dockerCompose.isRequiredBy(run)

application {
  mainModule = 'com.sshgroup.ssh_fridge_contents_tracker'
  mainClass = 'com.sshgroup.ssh_fridge_contents_tracker.MainApplication'
}

javafx {
  version = '17.0.8'
  modules = ['javafx.controls', 'javafx.fxml']
}

dependencies {
  implementation group: 'org.postgresql', name: 'postgresql', version: '42.7.4'
  testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
  testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
  runtimeOnly("org.postgresql:postgresql:42.6.0")
  implementation("org.hibernate.orm:hibernate-core:6.6.3.Final") {
    exclude group: "org.jboss.logging", module: "jboss-logging"
  }
  implementation("io.prometheus:prometheus-metrics-core:1.3.4")
  implementation("io.prometheus:prometheus-metrics-exporter-httpserver:1.3.4")
  implementation("io.prometheus:prometheus-metrics-instrumentation-jvm:1.3.4")

  implementation("jakarta.transaction:jakarta.transaction-api:2.0.1")
  implementation("jakarta.enterprise:jakarta.enterprise.cdi-api:4.1.0")
  implementation("org.jboss.logging:jboss-logging:3.4.1.Final")
  implementation("com.fasterxml:classmate:1.7.0")
  implementation("jakarta.xml.bind:jakarta.xml.bind-api:4.0.2")
  implementation("org.hibernate.common:hibernate-commons-annotations:7.0.3.Final")
  implementation("net.bytebuddy:byte-buddy:1.15.10");
}

test {
useJUnitPlatform()}

jlink {
  imageZip = project.file("${buildDir}/distributions/app-${javafx.platform.classifier}.zip")
  options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
  launcher {
    name = 'app'
  }
}

jlinkZip {
  group = 'distribution'
}

//distZip {
//  archiveName 'SSH-Fridge-Contents-Tracker.zip'
//}
